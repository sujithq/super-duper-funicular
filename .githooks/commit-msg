#!/bin/sh
# Conventional Commit Message Validation Hook
# Validates commit messages against conventional commit format

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Get commit message
commit_msg=$(cat "$1")

# Skip validation for merge commits
if echo "$commit_msg" | grep -q "^Merge "; then
    exit 0
fi

# Skip validation for revert commits
if echo "$commit_msg" | grep -q "^Revert "; then
    exit 0
fi

# Regular expression for conventional commit format
commit_regex='^(feat|fix|docs|style|refactor|test|chore|perf|ci|build)(\([a-z0-9-]+\))?(!)?: .{1,50}'

# Check if commit message matches conventional format
if echo "$commit_msg" | grep -qE "$commit_regex"; then
    echo "${GREEN}✅ Commit message format is valid${NC}"
    exit 0
else
    echo "${RED}❌ Invalid commit message format!${NC}"
    echo ""
    echo "${YELLOW}Expected format:${NC} <type>[optional scope]: <description>"
    echo ""
    echo "${YELLOW}Valid types:${NC}"
    echo "  feat     - A new feature"
    echo "  fix      - A bug fix"
    echo "  docs     - Documentation only changes"
    echo "  style    - Changes that do not affect the meaning of the code"
    echo "  refactor - A code change that neither fixes a bug nor adds a feature"
    echo "  test     - Adding missing tests or correcting existing tests"
    echo "  chore    - Changes to the build process or auxiliary tools"
    echo "  perf     - A code change that improves performance"
    echo "  ci       - Changes to CI configuration files and scripts"
    echo "  build    - Changes that affect the build system or external dependencies"
    echo ""
    echo "${YELLOW}Valid scopes (optional):${NC}"
    echo "  dashboard, analyze, anomalies, weather, data, models, services, cli, demo, docs, ci, deps"
    echo ""
    echo "${YELLOW}Examples:${NC}"
    echo "  feat(dashboard): add dark mode theme"
    echo "  fix: resolve memory leak in data processing"
    echo "  docs: update API documentation"
    echo "  feat!: redesign command structure (breaking change)"
    echo ""
    echo "${YELLOW}Your commit message:${NC}"
    echo "  $commit_msg"
    echo ""
    exit 1
fi
